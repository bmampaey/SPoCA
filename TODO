/*!
@page TODO To Do
List of improvements and bug corrections, in no particular order

 - DONE Vérifier les différences entre FCMClassifier.cpp (voir ComputeU) FCMClassifier.cpp.old, et en élevant d/X[j].sqrDistance(B[ii]); au carré comme VINCENT
 - DONE Comparer mes résultats à ceux de VIncent pour le FCM classique.
 - DONE Implémenter SPoCA (voir rema ci dessous), précalculer une image moyenne???
 - DONE demander à Vincent pourquoi U est un unsigned char, ppourquoi il fait exp=2/m-1, comment il calcul eta i la premiere fois, pourquoi il fait varier eta a chaque calcul de U, alors que krisnapuram le déconseille
 - DONE Créer des opérateurs pour feature vector et les mettre en inline??? Attention parametre de compilation -fkeep-inline-functions
 - DONE Créer une classe Classifier abstraite? avec obligation de redéfinir computeU et computeB
 - DONE Implémenter la sursegmentation
 - DONE Faire le lissage des régions
 - DONE tester avec 2 images
 - DONE Implémenter et tester avec centres classe prédéfinis
 - DONE Il y a 2 versions de FCMClassifier, l'une ou U est uij et l'autre ou U est uji, voir suer de grandes images s'il y a une difference de temps (y en a pas sur des images EIT)
 - DONE prendre le log de l'image avant la classification est intéressante (option dans solarRadius)
 - DONE Vérifier que les centres et rayons des régions soient identiques
 - DONE Il faut trier les centres, et du coup recalculer les U, mais pour cela il faut donc que l'ordre de eta suive B
 - DONE Voir si on peut templater FeatureVector -->NON PAS POSSIBLE
 - DONE Essayer de determiner les regions actives par la sursegmentation
 - DONE Corriger les filenames de debug partout et notamment dans la sursegmentation + pourquoi les centres ne sont pas afficher au dernier tour$
 - DONE prouver en génerant des images types que MON spoca fonctionne (trouver des générateurs de normales.
 - DONE Transformer l'array d'images en vector
 - DONE Templater feature vector en taille et type --> le type pourrait etre donne directement par les images dans la construction des classifiers
 - DONE Vérifier l'ordonancement des images en focntion des wavelengths lors de la lecture
 - DONE Utiliser memset pour mettre la mémoire à 0
 - DONE Ajouter d'autres PixelType dans les constructeurs
 - DONE Remettre la fixSursegmentation de FCMFixSursegmentation.cpp.nostring dans FCMFixSursegmentation.cpp
 - DONE Selon le choix du critere d'arret de la classification, faire attention a ce qu'il soit cohérent dans SPoCA et dans FCM, et dans PCA
 - DONE Verifier la precision numérique. Besoin de kahan Summing? Non, les quelques test ne montrent pas de difference
 - DONE Replace all long by unsigned (but make sure that the colors do not need to be long unsigned) 
 - DONE see the difference between Cis old version and newest version (maybe it is just the precision)
 - DONE Rendre cohérent le nommage des variables et méthodes minX et Xaxes --> xmin et xaxes, et Xmin et Xaxes(), numberPixels --> NumberPixels()) et pour les set setColor, setId, ...
 - DONE Et par conséquent modifier le draw boxes, etc pour enlever leftCorner, etc... (But final, ne plus avoir de Xaxes dans Region.h)
 - DONE time_obs is date_obs
 - DONE in tracking make the regions *regions
 - TO CHECK Make the colors hsl and hsb the same for .dot files and the gradient
 - DONE in the dot file put the rank, anf if possible a right shift according to center of the ar
 - DONE Make a Classifier::saveCenters(string filename)
 - DONE change saveResults saveAllResults with a debug > 2 ???
 - DONE in tracking //We remove the ones that have duplicate time --> TODO
 - DONE URGENT cretae a class coodinates and use it in FeatureVector and Region (would be nice for firtsPixel
 - DONE Change writeFitsImage -> write, add a read from fits
 - DONE the cumulativeClassifier with Coordinate and Histogram
 - DONE Fix the Histogram update, it does not take into accoount the binsize
 - DONE repair the contours
 - DONE faire un scrip makemovie.pl
 - DONE Colors all over the programs and classes do not need to be integers but it is hard to do otherwise.
 - DONE AIA images are coded on 16 bits = 65000 colors... might not be enough. Need to find a way to go around that.
 - DONE Change the organisation of preprocessing, use the median provided by the keywords (if any),
 - DONE Find why the cumulativeFCMClassifier is inheriting twice the stuff... PROBABLY A PROBLEM IN INSIGHT
 - DONE FIND THE BUG IN SPOCA
 - DONE The preprocessing is taking 2 arguments... wich is wierd now because we have the percent correction function
 - DONE BUGGGG Tracking restart from 0 if there is a period of calm (one map without AR)
 - DONE ETA 2 needs the centers to be sorted !!! Or to follow the order of the eta
 - DONE OBSDATE is incorrect
 - Implement a type kahan real KReal, with overloaded operator for the + - * and /
 - DONE POSSIBLE BUG If I have to restart the tracking with no maps, I must no restart the coloring at 0 
 - DONE Harmonize the way a Classifier is initialized (centers, neighboorhoodradius, fuzifier, centers, wavelengths, binSize, histogram, ...)
 - DONE Integrate the binsize into the histogramClassifier
 - DONE Wavelength and histogramm binsize ? Make sure they match
 - DONE Have an FCMinitB for the PCM like
 - DONE Segmented in Histogram classification is wrong
 - DONE Put ordonate images in tools for everyone
 - DONE Put the wavelength into classifier ?
 - DONE New classification for PCM2 u and b are calculated twice after changes of cis
 - DONE Ideally I should remove first all regions before previous_overlap from the graph --> Set to black
 - DONE Rethink the preprocessing (computation of the median of the central disc should be forced or not?), reestimate or invalidate the median, datap.. -> have a recompute stats that compute all stats for the image
 - DONE add the possibility to treshold the picture between min, max (add a preprocessing step and read value from keywords or recompute stats)
 - DONE make a classification only for AR, or CH, or Segmented like makeARmap 
 - DONE Change the steps to Classification, sorting of the centers, attribution, segmentation, getregions stats
 - DONE Correct the differebce between center location in fits and in Sunimage
 - DONE Check inheritance now that fuzzifier is in Classifier
 - DONE Rename Coordinate by PixelLocation
 - DONE Define a Coordinate with real values in it
 - DONE Verify all the changes made, by comparing old classification with new ones and same centers file
 - DONE Make the same kind of changes for SPoCAClassifier and SPoCA2Classifier
 - DONE Implement the Cylindrical equal-area projection
 - DONE Add median to regionstats
 - DONE Implement a fast but approximative projection (using fake long, lat)
 - DONE In the tracking, keep a birth date of regions and inherit it from the parent in case of split. That birth date can be used for CH short life removal 
 - DONE Verify the cleanig of the formulas of region stats (compare with previous version of spoca)
 - Check if we need crval keywords to be set in wcs
 - Correct bugs in coordinates transformation (compare with IDL)
 - For circular dilation and erosion, improve the programs by using euclidian distance transform for large factors 
 - Create a typical histogram to improve speed of histogram creation
 - Read/Write histograms in binary format (Fits files)
 - Adapt Argument helper to work with any kind of class (templates!)
 - Improve ALC by using splines (for CIS)
 - Cumulative classification make a thread to read the fitsfiles while it is adding the images and doing classification
 - Implement insertion of comments into fits headers
 - Rename Classiffier to FuzzyClassifier
 - Possible to make HistogramClassifier inherit Classifier ? If yes, move some HistogramFCMClassifier to Classifier
 - Verify how CumulativeClassifier inheritance is done
 - Implement a iterator, enumerator (iterator + indice), and enumerator2D (iterator + Coordinate)
 - Test the cumulative and the sursegmentation in comparison to SVN version 25
 - Separate Sursegmentation into another class?  
 - Implement the SpacialClassifier with just the neighboor list, let Xsmoothed in SPoCA, then make SPoCA and others inherit it.
 - Create a general program that can call all the Image methods 
 - Make the option to read arguments from file
 - Replace CGL to Boost Graph Library instead 

  */
